import csv


class openvas_csv_parse_detail():

	def __init__(self,file):
		self.file = file

		self.CVE_dict = {}
		self.resul = {}
		self.openvas_csv_par()



	def openvas_csv_par(self):
		'''
			structure is 
			result dict contain ip , host, ports( contais dict { port { port dict contais portdetaiil } })
			resul{ 
					port{
						port#{
							port detail{
		
							}//port detail 

						}//port#

					}//ports 


				}//resul dict

				e.g resul['ports']['80']['severity']


				2. csv_dict = contains dict of ip, port:CSV#
		'''

		with open(self.file) as fh:
		    rd = csv.DictReader(fh, delimiter=',')
		    l = 0;temp_port_dict = {}
		    for row in rd:
				if l == 0:
					ip_addr  = row["IP"]
					host  = row["Hostname"]
					self.resul['ip'] = ip_addr
					self.resul['host'] = host
					self.CVE_dict['ip_addr'] = ip_addr
					l = 2

				temp_port_detail_dict = {}

				if row['IP'] == ip_addr:

					port 			= row['Port']
					proto 			= row['Port Protocol']
					sevrity 		= row['Severity']
					solution_type 	= row['Solution Type']
					nvt_name		= row['NVT Name']
					summary			= row['Summary']
					specfic_resul	= row['Specific Result']
					nvt_oid			= row['NVT OID']
					task_id			= row['Task ID']
					cve 			= row['CVEs']
					task_name		= row['Task Name']
					timestamp		= row['Timestamp']
					report_id		= row['Result ID']
					impact 			= row['Impact']
					solution		= row['Solution']
					affect_soft		= row['Affected Software/OS']
					vul_insight		= row['Vulnerability Insight']
					vul_dect_mtd	= row['Vulnerability Detection Method']
					prod_dect_resul = row['Product Detection Result']
					ref 			= row['Other References']
					
					if port :
						temp_port_detail_dict['port'] = port
						temp_port_detail_dict['proto'] = proto
						temp_port_detail_dict['sevrity'] = sevrity

						# print temp_port_detail_dict

						temp_port_dict[port] = temp_port_detail_dict
						if cve:
							if cve != 'NOCVE':
								self.CVE_dict[port] = cve

	        self.resul["ports"]  = temp_port_dict
			


		# print
		# # print ip_addr
		# print self.resul
		# # print resul.keys()
		# print
		# # print self.resul['ip']
		# print self.resul['ports']['110']['port']

		# print self.CVE_dict


	def openvas_cve_dict(self):
		'''
			structure is 
			result dict contain ip , host, ports( contais dict { port { port dict contais portdetaiil } })
			resul{ 
					port{
						port#{
							port detail{
		
							}//port detail 

						}//port#

					}//ports 


				}//resul dict

				e.g resul['ports']['80']['severity']
		'''

		return self.CVE_dict



	def openvas_result_dict(self):
		'''
			structure is 
			result dict contain ip , host, ports( contais dict { port { port dict contais portdetaiil } })
			resul{ 
					port{
						port#{
							port detail{
		
							}//port detail 

						}//port#

					}//ports 


				}//resul dict

				e.g resul['ports']['80']['severity']
		'''

		return self.resul
	

# a = openvas_csv_parse_detail('/root/Desktop/celery_setup.txt/dj_file_upload/hicarser/reports/openvas/opv_176_192.168.0.78/csv/192.168.0.78.csv')
# print a.openvas_csv_dict()
